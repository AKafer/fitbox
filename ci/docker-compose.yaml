version: "3.8"

services:
  db:
    container_name: fitbox_db
    image: postgres:14-bullseye
    restart: on-failure
    volumes:
      - postgres_data_fitbox:/var/lib/postgresql/data/
    env_file:
      - ./.env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - fitbox
    ports:
      - "5433:5432"

  redis:
    container_name: fitbox_redis
    image: redis:7-alpine
    restart: unless-stopped
    command: [ "redis-server", "--appendonly", "yes" ]
    volumes:
      - redis_data_fitbox:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - fitbox

  app:
    container_name: fitbox_app
    image: akafer/fitbox
    restart: on-failure
    ports:
      - "8850:8850"
    command: >
      bash -c "alembic upgrade head
      && python3 /app/src/scripts/create_user.py
      && python3 /app/src/run.py --port=8850"
    logging:
      driver: loki
      options:
        loki-url: "http://${INFRA_HOST}/loki/api/v1/push"
        loki-external-labels: "app=fitbox"
        loki-batch-size: "400"
        loki-retries: "3"
        loki-pipeline-stages: |
          - regex:
              expression: '^(?P<level>DEBUG|INFO|WARNING|ERROR|CRITICAL)'
          - labels:
              level:
    env_file:
      - .env
    volumes:
        - ./logs:/app/src/logs
        - ./files/photos:/app/src/static/photos
    depends_on:
      db: {condition: service_healthy}
      mosquitto: {condition: service_started}
      redis: { condition: service_healthy }
    networks:
      - fitbox

  mosquitto:
      container_name: fitbox_mosquitto
      image: eclipse-mosquitto:2
      restart: unless-stopped
      ports:
        - "1883:1883"
        - "9001:9001"
      volumes:
        - ./conf/mosquitto.conf:/mosquitto/config/mosquitto.conf
        - /etc/letsencrypt/live/${SERVER_HOSTNAME}/fullchain.pem:/mosquitto/certs/chain.pem
        - /etc/letsencrypt/live/${SERVER_HOSTNAME}/cert.pem:/mosquitto/certs/cert.pem
        - /etc/letsencrypt/live/${SERVER_HOSTNAME}/privkey.pem:/mosquitto/certs/privkey.pem
      networks:
        - fitbox

volumes:
  postgres_data_fitbox:
  redis_data_fitbox:

networks:
  fitbox:
    name: fitbox
    driver: bridge
