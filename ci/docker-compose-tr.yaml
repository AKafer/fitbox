version: "3.8"

services:
  traefik:
    image: traefik:latest
    container_name: fitbox_traefik
    env_file:
      - .env
    command:
      - --entryPoints.web.address=:80
      - --entryPoints.websecure.address=:443
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --certificatesResolvers.le.acme.email=${LETSENCRYPT_EMAIL}
      - --certificatesResolvers.le.acme.storage=/letsencrypt/acme.json
      - --certificatesResolvers.le.acme.tlsChallenge=true
      - --api.insecure=true
      - --api.dashboard=true
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./letsencrypt:/letsencrypt

  db:
    container_name: fitbox_db
    image: postgres:14-bullseye
    restart: on-failure
    volumes:
      - postgres_data_fitbox:/var/lib/postgresql/data/
    env_file:
      - ./.env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 3s
      retries: 3
    ports:
      - "5433:5432"

  app:
    container_name: fitbox_app
    image: akafer/fitbox
    restart: on-failure
    command: >
      bash -c "alembic upgrade head
      && python3 /app/src/scripts/create_user.py
      && python3 /app/src/run.py --port=8850"
    env_file:
      - .env
    volumes:
        - ./logs:/app/src/logs
    depends_on:
      db:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app-http.rule=Host(`fitbox-test.net`) && PathPrefix(`/api`)"
      - "traefik.http.routers.app-http.entrypoints=web"
      - "traefik.http.routers.app-https.rule=Host(`fitbox-test.net`) && PathPrefix(`/api`)"
      - "traefik.http.routers.app-https.entrypoints=websecure"
      - "traefik.http.routers.app-https.tls=true"
      - "traefik.http.services.app.loadbalancer.server.port=8850"

volumes:
  postgres_data_fitbox:
